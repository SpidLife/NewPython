29-10-2022 21:51:29 - main - INFO - <module> - Start program
29-10-2022 21:51:30 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
29-10-2022 21:51:36 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
29-10-2022 21:51:40 - db_work - INFO - find_entry - Search for an entry: Цинов
29-10-2022 21:51:40 - db_work - INFO - find_entry - Search result: ['1 Кирилл Цинов 12345678 автосервис', '2 Кира Цинов 12345678 работа']
29-10-2022 21:51:45 - user_interface - INFO - import_export_menu - Start import/export menu
29-10-2022 21:51:51 - db_work - INFO - file_import - Changing the database file: апрол
29-10-2022 21:51:51 - db_work - WARNING - file_import - The database was not found: апрол
29-10-2022 21:51:54 - user_interface - INFO - import_export_menu - Start import/export menu
29-10-2022 21:51:56 - user_interface - INFO - import_export_menu - Start choose a format menu
29-10-2022 21:51:57 - user_interface - WARNING - import_export_menu - Choose a format menu, wrong item selected.
29-10-2022 21:51:57 - user_interface - INFO - import_export_menu - Start choose a format menu
29-10-2022 21:52:07 - db_export - INFO - save_csv - Export in csv format: new_3.csv
29-10-2022 21:52:12 - user_interface - INFO - menu - Stop program.
29-10-2022 22:01:18 - main - INFO - <module> - Start program
29-10-2022 22:01:20 - user_interface - INFO - add_menu - Start add menu
29-10-2022 22:01:23 - user_interface - INFO - add_menu - Stop edit menu
29-10-2022 22:01:23 - db_work - INFO - add_entry - Adding a new entry: {'id': '', 'name': '', 'surname': '', 'phone': 'выа', 'description': 'ва'}
29-10-2022 22:02:29 - main - INFO - <module> - Start program
29-10-2022 22:02:38 - user_interface - INFO - add_menu - Start add menu
29-10-2022 22:02:41 - user_interface - INFO - add_menu - Stop edit menu
29-10-2022 22:02:41 - db_work - INFO - add_entry - Adding a new entry: {'id': '', 'name': '', 'surname': '', 'phone': '', 'description': ''}
29-10-2022 22:03:41 - main - INFO - <module> - Start program
29-10-2022 22:03:43 - user_interface - INFO - add_menu - Start add menu
29-10-2022 22:03:45 - user_interface - INFO - add_menu - Stop edit menu
29-10-2022 22:03:45 - db_work - INFO - add_entry - Adding a new entry: {'id': '', 'name': '', 'surname': '', 'phone': '', 'description': ''}
29-10-2022 22:05:03 - main - INFO - <module> - Start program
29-10-2022 22:05:06 - user_interface - INFO - add_menu - Start add menu
29-10-2022 22:05:08 - user_interface - INFO - add_menu - Stop edit menu
29-10-2022 22:05:08 - db_work - INFO - add_entry - Adding a new entry: {'id': '', 'name': '', 'surname': '', 'phone': '', 'description': ''}
29-10-2022 22:05:08 - db_work - WARNING - add_entry - The data is incorrect or already present in the database
29-10-2022 22:05:11 - user_interface - INFO - add_menu - Start add menu
29-10-2022 22:05:16 - user_interface - INFO - add_menu - Stop edit menu
29-10-2022 22:05:16 - db_work - INFO - add_entry - Adding a new entry: {'id': '', 'name': 'sad', 'surname': '', 'phone': 'вы', 'description': ''}
29-10-2022 22:05:16 - db_work - WARNING - add_entry - The data is incorrect or already present in the database
29-10-2022 22:05:21 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
29-10-2022 22:05:52 - user_interface - INFO - add_menu - Start add menu
29-10-2022 22:06:09 - user_interface - INFO - add_menu - Stop edit menu
29-10-2022 22:06:09 - db_work - INFO - add_entry - Adding a new entry: {'id': '', 'name': 'Кира', 'surname': 'Цинов', 'phone': '12345678', 'description': 'работа'}
29-10-2022 22:06:09 - db_work - WARNING - add_entry - The data is incorrect or already present in the database
29-10-2022 22:06:14 - user_interface - INFO - menu - Stop program.
11-12-2022 11:45:31 - main - INFO - <module> - Start program
11-12-2022 11:46:07 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
18-12-2022 08:11:38 - main - INFO - <module> - Start program
18-12-2022 08:11:41 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
18-12-2022 08:11:49 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
18-12-2022 08:11:54 - db_work - INFO - find_entry - Search for an entry: 1
18-12-2022 08:11:54 - db_work - INFO - find_entry - Search result: ['1 Кирилл Цинов 12345678 автосервис']
18-12-2022 08:12:03 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
18-12-2022 08:12:11 - db_work - INFO - find_entry - Search for an entry: Василий
18-12-2022 08:12:11 - db_work - INFO - find_entry - Search result: ['4 Василий Степанов 12345678 велосипеды', '5 Василий Пурков 2345678 лыжи']
18-12-2022 08:12:59 - user_interface - INFO - import_export_menu - Start import/export menu
18-12-2022 08:13:29 - db_work - INFO - file_import - Changing the database file: вар
18-12-2022 08:13:29 - db_work - WARNING - file_import - The database was not found: вар
18-12-2022 08:13:36 - user_interface - INFO - import_export_menu - Start import/export menu
18-12-2022 08:13:39 - user_interface - INFO - import_export_menu - Start choose a format menu
18-12-2022 08:13:46 - db_export - INFO - save_xml - Export in xml format: еее.xml
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'1': {'id': '1', 'name': 'Кирилл', 'surname': 'Цинов', 'phone': '12345678', 'description': 'автосервис'}, '2': {'id': '2', 'name': 'Кира', 'surname': 'Цинов', 'phone': '12345678', 'description': 'работа'}, '3': {'id': '3', 'name': 'Роман', 'surname': 'Хорошев', 'phone': '23456789', 'description': 'институт'}, '4': {'id': '4', 'name': 'Василий', 'surname': 'Степанов', 'phone': '12345678', 'description': 'велосипеды'}, '5': {'id': '5', 'name': 'Василий', 'surname': 'Пурков', 'phone': '2345678', 'description': 'лыжи'}}"
18-12-2022 08:13:46 - dicttoxml - INFO - dicttoxml - Inside dicttoxml(): type(obj) is: "dict", obj="{'1': {'id': '1', 'name': 'Кирилл', 'surname': 'Цинов', 'phone': '12345678', 'description': 'автосервис'}, '2': {'id': '2', 'name': 'Кира', 'surname': 'Цинов', 'phone': '12345678', 'description': 'работа'}, '3': {'id': '3', 'name': 'Роман', 'surname': 'Хорошев', 'phone': '23456789', 'description': 'институт'}, '4': {'id': '4', 'name': 'Василий', 'surname': 'Степанов', 'phone': '12345678', 'description': 'велосипеды'}, '5': {'id': '5', 'name': 'Василий', 'surname': 'Пурков', 'phone': '2345678', 'description': 'лыжи'}}"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'1': {'id': '1', 'name': 'Кирилл', 'surname': 'Цинов', 'phone': '12345678', 'description': 'автосервис'}, '2': {'id': '2', 'name': 'Кира', 'surname': 'Цинов', 'phone': '12345678', 'description': 'работа'}, '3': {'id': '3', 'name': 'Роман', 'surname': 'Хорошев', 'phone': '23456789', 'description': 'институт'}, '4': {'id': '4', 'name': 'Василий', 'surname': 'Степанов', 'phone': '12345678', 'description': 'велосипеды'}, '5': {'id': '5', 'name': 'Василий', 'surname': 'Пурков', 'phone': '2345678', 'description': 'лыжи'}}"
18-12-2022 08:13:46 - dicttoxml - INFO - convert - Inside convert(). obj type is: "dict", obj="{'1': {'id': '1', 'name': 'Кирилл', 'surname': 'Цинов', 'phone': '12345678', 'description': 'автосервис'}, '2': {'id': '2', 'name': 'Кира', 'surname': 'Цинов', 'phone': '12345678', 'description': 'работа'}, '3': {'id': '3', 'name': 'Роман', 'surname': 'Хорошев', 'phone': '23456789', 'description': 'институт'}, '4': {'id': '4', 'name': 'Василий', 'surname': 'Степанов', 'phone': '12345678', 'description': 'велосипеды'}, '5': {'id': '5', 'name': 'Василий', 'surname': 'Пурков', 'phone': '2345678', 'description': 'лыжи'}}"
18-12-2022 08:13:46 - dicttoxml - INFO - default_item_func - Inside default_item_func(). parent = "root"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'1': {'id': '1', 'name': 'Кирилл', 'surname': 'Цинов', 'phone': '12345678', 'description': 'автосервис'}, '2': {'id': '2', 'name': 'Кира', 'surname': 'Цинов', 'phone': '12345678', 'description': 'работа'}, '3': {'id': '3', 'name': 'Роман', 'surname': 'Хорошев', 'phone': '23456789', 'description': 'институт'}, '4': {'id': '4', 'name': 'Василий', 'surname': 'Степанов', 'phone': '12345678', 'description': 'велосипеды'}, '5': {'id': '5', 'name': 'Василий', 'surname': 'Пурков', 'phone': '2345678', 'description': 'лыжи'}}"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Inside convert_dict(): obj type is: "dict", obj="{'1': {'id': '1', 'name': 'Кирилл', 'surname': 'Цинов', 'phone': '12345678', 'description': 'автосервис'}, '2': {'id': '2', 'name': 'Кира', 'surname': 'Цинов', 'phone': '12345678', 'description': 'работа'}, '3': {'id': '3', 'name': 'Роман', 'surname': 'Хорошев', 'phone': '23456789', 'description': 'институт'}, '4': {'id': '4', 'name': 'Василий', 'surname': 'Степанов', 'phone': '12345678', 'description': 'велосипеды'}, '5': {'id': '5', 'name': 'Василий', 'surname': 'Пурков', 'phone': '2345678', 'description': 'лыжи'}}"
18-12-2022 08:13:46 - dicttoxml - INFO - default_item_func - Inside default_item_func(). parent = "root"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "1"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '1', 'name': 'Кирилл', 'surname': 'Цинов', 'phone': '12345678', 'description': 'автосервис'}"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="1", val="{'id': '1', 'name': 'Кирилл', 'surname': 'Цинов', 'phone': '12345678', 'description': 'автосервис'}", type(val)="dict"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "1"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "1" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "1" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "1"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "1"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "1"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '1', 'name': 'Кирилл', 'surname': 'Цинов', 'phone': '12345678', 'description': 'автосервис'}"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Inside convert_dict(): obj type is: "dict", obj="{'id': '1', 'name': 'Кирилл', 'surname': 'Цинов', 'phone': '12345678', 'description': 'автосервис'}"
18-12-2022 08:13:46 - dicttoxml - INFO - default_item_func - Inside default_item_func(). parent = "n1"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "1"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="id", val="1", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "1"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="id", val="1", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "1" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "1"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Кирилл"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="name", val="Кирилл", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Кирилл"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="name", val="Кирилл", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Кирилл" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Кирилл"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Цинов"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="surname", val="Цинов", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Цинов"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="surname", val="Цинов", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Цинов" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Цинов"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="phone", val="12345678", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="phone", val="12345678", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "12345678" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "автосервис"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="description", val="автосервис", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "автосервис"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="description", val="автосервис", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "автосервис" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "автосервис"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "2"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '2', 'name': 'Кира', 'surname': 'Цинов', 'phone': '12345678', 'description': 'работа'}"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="2", val="{'id': '2', 'name': 'Кира', 'surname': 'Цинов', 'phone': '12345678', 'description': 'работа'}", type(val)="dict"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "2"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "2" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "2" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "2"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "2"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "2"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '2', 'name': 'Кира', 'surname': 'Цинов', 'phone': '12345678', 'description': 'работа'}"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Inside convert_dict(): obj type is: "dict", obj="{'id': '2', 'name': 'Кира', 'surname': 'Цинов', 'phone': '12345678', 'description': 'работа'}"
18-12-2022 08:13:46 - dicttoxml - INFO - default_item_func - Inside default_item_func(). parent = "n2"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "2"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="id", val="2", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "2"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="id", val="2", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "2" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "2"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Кира"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="name", val="Кира", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Кира"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="name", val="Кира", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Кира" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Кира"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Цинов"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="surname", val="Цинов", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Цинов"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="surname", val="Цинов", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Цинов" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Цинов"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="phone", val="12345678", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="phone", val="12345678", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "12345678" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "работа"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="description", val="работа", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "работа"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="description", val="работа", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "работа" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "работа"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "3"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '3', 'name': 'Роман', 'surname': 'Хорошев', 'phone': '23456789', 'description': 'институт'}"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="3", val="{'id': '3', 'name': 'Роман', 'surname': 'Хорошев', 'phone': '23456789', 'description': 'институт'}", type(val)="dict"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "3"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "3" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "3" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "3"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "3"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "3"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '3', 'name': 'Роман', 'surname': 'Хорошев', 'phone': '23456789', 'description': 'институт'}"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Inside convert_dict(): obj type is: "dict", obj="{'id': '3', 'name': 'Роман', 'surname': 'Хорошев', 'phone': '23456789', 'description': 'институт'}"
18-12-2022 08:13:46 - dicttoxml - INFO - default_item_func - Inside default_item_func(). parent = "n3"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "3"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="id", val="3", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "3"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="id", val="3", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "3" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "3"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Роман"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="name", val="Роман", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Роман"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="name", val="Роман", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Роман" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Роман"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Хорошев"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="surname", val="Хорошев", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Хорошев"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="surname", val="Хорошев", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Хорошев" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Хорошев"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "23456789"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="phone", val="23456789", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "23456789"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="phone", val="23456789", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "23456789" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "23456789"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "институт"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="description", val="институт", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "институт"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="description", val="институт", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "институт" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "институт"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "4"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '4', 'name': 'Василий', 'surname': 'Степанов', 'phone': '12345678', 'description': 'велосипеды'}"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="4", val="{'id': '4', 'name': 'Василий', 'surname': 'Степанов', 'phone': '12345678', 'description': 'велосипеды'}", type(val)="dict"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "4"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "4" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "4" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "4"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "4"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "4"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '4', 'name': 'Василий', 'surname': 'Степанов', 'phone': '12345678', 'description': 'велосипеды'}"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Inside convert_dict(): obj type is: "dict", obj="{'id': '4', 'name': 'Василий', 'surname': 'Степанов', 'phone': '12345678', 'description': 'велосипеды'}"
18-12-2022 08:13:46 - dicttoxml - INFO - default_item_func - Inside default_item_func(). parent = "n4"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "4"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="id", val="4", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "4"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="id", val="4", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "4" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "4"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Василий"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="name", val="Василий", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Василий"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="name", val="Василий", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Василий" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Василий"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Степанов"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="surname", val="Степанов", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Степанов"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="surname", val="Степанов", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Степанов" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Степанов"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="phone", val="12345678", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="phone", val="12345678", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "12345678" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "велосипеды"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="description", val="велосипеды", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "велосипеды"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="description", val="велосипеды", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "велосипеды" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "велосипеды"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "5"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '5', 'name': 'Василий', 'surname': 'Пурков', 'phone': '2345678', 'description': 'лыжи'}"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="5", val="{'id': '5', 'name': 'Василий', 'surname': 'Пурков', 'phone': '2345678', 'description': 'лыжи'}", type(val)="dict"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "5"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "5" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "5" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "5"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "5"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "5"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '5', 'name': 'Василий', 'surname': 'Пурков', 'phone': '2345678', 'description': 'лыжи'}"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Inside convert_dict(): obj type is: "dict", obj="{'id': '5', 'name': 'Василий', 'surname': 'Пурков', 'phone': '2345678', 'description': 'лыжи'}"
18-12-2022 08:13:46 - dicttoxml - INFO - default_item_func - Inside default_item_func(). parent = "n5"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "5"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="id", val="5", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "5"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="id", val="5", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "5" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "5"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Василий"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="name", val="Василий", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Василий"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="name", val="Василий", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Василий" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Василий"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Пурков"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="surname", val="Пурков", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Пурков"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="surname", val="Пурков", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Пурков" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Пурков"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "2345678"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="phone", val="2345678", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "2345678"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="phone", val="2345678", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "2345678" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "2345678"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "лыжи"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="description", val="лыжи", type(val)="str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "лыжи"
18-12-2022 08:13:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="description", val="лыжи", type(val) is: "str"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
18-12-2022 08:13:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
18-12-2022 08:13:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
18-12-2022 08:13:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "лыжи" and type(s) = "<class 'str'>"
18-12-2022 08:13:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "лыжи"
18-12-2022 08:13:53 - user_interface - INFO - menu - Stop program.
18-12-2022 13:19:44 - main - INFO - <module> - Start program
10-01-2023 13:23:19 - main - INFO - <module> - Start program
10-01-2023 13:23:22 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 13:23:31 - user_interface - WARNING - menu - Main menu, wrong item selected.
10-01-2023 13:23:32 - user_interface - WARNING - menu - Main menu, wrong item selected.
10-01-2023 13:23:33 - user_interface - WARNING - menu - Main menu, wrong item selected.
10-01-2023 13:23:33 - user_interface - WARNING - menu - Main menu, wrong item selected.
10-01-2023 13:23:34 - user_interface - WARNING - menu - Main menu, wrong item selected.
10-01-2023 13:23:34 - user_interface - WARNING - menu - Main menu, wrong item selected.
10-01-2023 13:33:59 - main - INFO - <module> - Start program
10-01-2023 13:33:59 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 13:34:03 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 13:34:16 - user_interface - INFO - menu - Stop program.
10-01-2023 13:34:19 - main - INFO - <module> - Start program
10-01-2023 13:34:19 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 13:38:06 - main - INFO - <module> - Start program
10-01-2023 13:38:06 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 13:38:18 - db_work - INFO - find_entry - Search for an entry: Кира
10-01-2023 13:38:18 - db_work - INFO - find_entry - Search result: ['2 Кира Цинов 12345678 работа']
10-01-2023 13:38:18 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 13:38:31 - user_interface - INFO - add_menu - Start add menu
10-01-2023 13:38:33 - user_interface - INFO - add_menu - Stop edit menu
10-01-2023 13:38:33 - db_work - INFO - add_entry - Adding a new entry: {'id': '1', 'name': '', 'surname': '', 'phone': '', 'description': ''}
10-01-2023 13:38:33 - db_work - WARNING - add_entry - The data is incorrect or already present in the database
10-01-2023 13:38:33 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 13:38:39 - user_interface - INFO - add_menu - Start add menu
10-01-2023 13:38:51 - user_interface - INFO - add_menu - Stop edit menu
10-01-2023 13:38:51 - db_work - INFO - add_entry - Adding a new entry: {'id': '1', 'name': 'Ивае', 'surname': 'Пиков', 'phone': '', 'description': ''}
10-01-2023 13:38:51 - db_work - WARNING - add_entry - The data is incorrect or already present in the database
10-01-2023 13:38:51 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 13:38:55 - user_interface - INFO - add_menu - Start add menu
10-01-2023 13:39:17 - user_interface - INFO - add_menu - Stop edit menu
10-01-2023 13:39:17 - db_work - INFO - add_entry - Adding a new entry: {'id': '1', 'name': 'Иван', 'surname': 'Пиков', 'phone': '123456789', 'description': 'кровельщик'}
10-01-2023 13:39:17 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 13:39:23 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 13:39:28 - user_interface - INFO - menu - Stop program.
10-01-2023 13:40:19 - main - INFO - <module> - Start program
10-01-2023 13:40:19 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 13:40:22 - user_interface - INFO - menu - Stop program.

10-01-2023 13:40:28 - main - INFO - <module> - Start program
10-01-2023 13:40:28 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 13:40:32 - user_interface - INFO - menu - Stop program.

10-01-2023 13:42:55 - main - INFO - <module> - Start program
10-01-2023 13:42:55 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 13:42:59 - user_interface - INFO - edit_menu - Start edit menu
10-01-2023 13:43:02 - user_interface - INFO - edit_menu - Exited the edit menu
10-01-2023 13:43:02 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 13:43:06 - user_interface - INFO - add_menu - Start add menu
10-01-2023 13:43:34 - user_interface - INFO - add_menu - Stop edit menu
10-01-2023 13:43:34 - db_work - INFO - add_entry - Adding a new entry: {'id': '1', 'name': 'Иван', 'surname': 'Пиков', 'phone': '', 'description': ''}
10-01-2023 13:43:34 - db_work - WARNING - add_entry - The data is incorrect or already present in the database
10-01-2023 13:43:34 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 13:43:39 - user_interface - INFO - add_menu - Start add menu
10-01-2023 13:43:54 - user_interface - INFO - add_menu - Stop edit menu
10-01-2023 13:43:54 - db_work - INFO - add_entry - Adding a new entry: {'id': '1', 'name': 'Иван', 'surname': 'Пиков', 'phone': 'Пиков', 'description': 'Пиков'}
10-01-2023 13:43:54 - db_work - WARNING - add_entry - Data added to the notebook
10-01-2023 13:43:54 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 13:44:48 - user_interface - INFO - menu - Stop program.

10-01-2023 13:45:47 - main - INFO - <module> - Start program
10-01-2023 13:45:47 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 13:45:51 - db_work - INFO - find_entry - Search for an entry: Иван
10-01-2023 13:45:51 - db_work - INFO - find_entry - Search result: ['6 Иван Пиков 123456789 кровельщик', '7 Иван Пиков Пиков Пиков']
10-01-2023 13:45:51 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 13:45:58 - user_interface - INFO - add_menu - Start add menu
10-01-2023 13:46:13 - user_interface - INFO - add_menu - Stop edit menu
10-01-2023 13:46:13 - db_work - INFO - add_entry - Adding a new entry: {'id': '1', 'name': 'Иван', 'surname': 'Пиков', 'phone': '123456789', 'description': 'кровельщик'}
10-01-2023 13:46:13 - db_work - WARNING - add_entry - Data added to the notebook: dict_values([8, 'Иван', 'Пиков', '123456789', 'кровельщик'])
10-01-2023 13:46:13 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 13:46:17 - user_interface - INFO - menu - Stop program.

10-01-2023 13:54:35 - main - INFO - <module> - Start program
10-01-2023 13:54:35 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 13:55:00 - main - INFO - <module> - Start program
10-01-2023 13:55:00 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 13:55:11 - user_interface - INFO - add_menu - Start add menu
10-01-2023 14:08:22 - main - INFO - <module> - Start program
10-01-2023 14:08:22 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 14:12:26 - main - INFO - <module> - Start program
10-01-2023 14:12:26 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 14:12:54 - main - INFO - <module> - Start program
10-01-2023 14:12:54 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 14:12:57 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 14:13:37 - main - INFO - <module> - Start program
10-01-2023 14:13:37 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 14:13:40 - main - INFO - <module> - Start program
10-01-2023 14:13:42 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 14:13:55 - main - INFO - <module> - Start program
10-01-2023 14:13:57 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 14:38:28 - main - INFO - <module> - Start program
10-01-2023 14:38:28 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 14:38:36 - user_interface - INFO - add_menu - Start add menu
10-01-2023 14:39:43 - main - INFO - <module> - Start program
10-01-2023 14:39:43 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 14:39:46 - user_interface - INFO - add_menu - Start add menu
10-01-2023 14:42:05 - user_interface - INFO - add_menu - Stop edit menu
10-01-2023 14:42:05 - db_work - INFO - add_entry - Adding a new entry: {'id': '1', 'name': 'Иван', 'surname': 'Пиков', 'phone': '12345678901', 'description': 'кровельщик'}
10-01-2023 14:42:05 - db_work - WARNING - add_entry - Data added to the notebook: dict_values([8, 'Иван', 'Пиков', '12345678901', 'кровельщик'])
10-01-2023 14:42:05 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 14:42:08 - user_interface - INFO - menu - Stop program.

10-01-2023 14:42:25 - main - INFO - <module> - Start program
10-01-2023 14:42:25 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 14:42:27 - user_interface - INFO - add_menu - Start add menu
10-01-2023 14:42:45 - user_interface - INFO - add_menu - Stop edit menu
10-01-2023 14:42:45 - db_work - INFO - add_entry - Adding a new entry: {'id': '1', 'name': 'Иван', 'surname': 'Пиков', 'phone': '12345678901', 'description': 'кровельщик'}
10-01-2023 14:42:45 - db_work - WARNING - add_entry - The data is incorrect or already present in the database
10-01-2023 14:42:45 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 14:43:31 - user_interface - WARNING - menu - Main menu, wrong item selected.
10-01-2023 14:43:31 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 14:43:33 - user_interface - INFO - menu - Stop program.

10-01-2023 14:45:03 - main - INFO - <module> - Start program
10-01-2023 14:45:03 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 14:45:07 - user_interface - INFO - edit_menu - Start edit menu
10-01-2023 14:45:22 - db_work - INFO - edit_entry - Data changes: ('description', '')
10-01-2023 14:45:22 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 14:45:26 - db_work - INFO - find_entry - Search for an entry: 
10-01-2023 14:45:26 - db_work - WARNING - find_entry - No data found: 
10-01-2023 14:46:10 - main - INFO - <module> - Start program
10-01-2023 14:46:10 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 14:46:12 - user_interface - INFO - edit_menu - Start edit menu
10-01-2023 14:46:24 - user_interface - WARNING - edit_menu - Edit menu, wrong item selected.
10-01-2023 14:46:29 - user_interface - WARNING - edit_menu - Edit menu, wrong item selected.
10-01-2023 14:46:30 - user_interface - WARNING - edit_menu - Edit menu, wrong item selected.
10-01-2023 14:46:36 - db_work - INFO - edit_entry - Data changes: ('description', 'asdfg')
10-01-2023 14:46:36 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 15:09:04 - main - INFO - <module> - Start program
10-01-2023 15:09:04 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 15:12:51 - db_work - INFO - find_entry - Search for an entry: 7
10-01-2023 15:12:51 - db_work - INFO - find_entry - Search result: ['7 Иван Пиков Пиков Пиков']
10-01-2023 15:12:51 - user_interface - INFO - edit_menu - Start edit menu
10-01-2023 15:13:01 - db_work - INFO - edit_entry - Data changes: ('phone', '1234567')
10-01-2023 15:15:53 - main - INFO - <module> - Start program
10-01-2023 15:15:53 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 15:16:01 - db_work - INFO - find_entry - Search for an entry: 7
10-01-2023 15:16:01 - db_work - INFO - find_entry - Search result: ['7 Иван Пиков Пиков Пиков']
10-01-2023 15:16:01 - user_interface - INFO - edit_menu - Start edit menu
10-01-2023 15:16:24 - db_work - INFO - edit_entry - Data changes: ('description', '')
10-01-2023 15:16:24 - db_work - INFO - find_entry - Search for an entry: 7
10-01-2023 15:16:24 - db_work - INFO - find_entry - Search result: ['7 Иван Пиков Пиков Пиков']
10-01-2023 15:16:24 - db_work - INFO - edit_entry - Current value: Пиков
10-01-2023 15:16:24 - db_work - INFO - edit_entry - New value: 
10-01-2023 15:16:24 - db_work - INFO - edit_entry - Data changed
10-01-2023 15:16:24 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 15:16:28 - user_interface - INFO - menu - Stop program.

10-01-2023 15:33:40 - main - INFO - <module> - Start program
10-01-2023 15:33:40 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 15:33:52 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 15:33:52 - err_check - INFO - find_entry - Search for an entry: 7
10-01-2023 15:33:52 - err_check - INFO - find_entry - Search result: ['7 Иван Пиков Пиков ']
10-01-2023 15:33:52 - user_interface - INFO - edit_menu - Start edit menu
10-01-2023 15:33:56 - db_work - INFO - edit_entry - Data changes: ('description', 'asdfghj')
10-01-2023 15:34:19 - main - INFO - <module> - Start program
10-01-2023 15:34:19 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 15:34:23 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 15:34:23 - err_check - INFO - find_entry - Search for an entry: 7
10-01-2023 15:34:23 - err_check - INFO - find_entry - Search result: ['7 Иван Пиков Пиков ']
10-01-2023 15:34:23 - user_interface - INFO - edit_menu - Start edit menu
10-01-2023 15:34:27 - db_work - INFO - edit_entry - Data changes: ('description', 'asddfgh')
10-01-2023 15:34:27 - err_check - INFO - find_entry - Search for an entry: 7
10-01-2023 15:34:27 - err_check - INFO - find_entry - Search result: ['7 Иван Пиков Пиков ']
10-01-2023 15:34:27 - db_work - INFO - edit_entry - Current value: 
10-01-2023 15:34:27 - db_work - INFO - edit_entry - New value: asddfgh
10-01-2023 15:34:27 - db_work - INFO - edit_entry - Data changed
10-01-2023 15:34:27 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 15:34:34 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 15:43:45 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 15:43:45 - err_check - INFO - find_entry - Search for an entry: 7
10-01-2023 15:43:45 - err_check - INFO - find_entry - Search result: ['7 Иван Пиков Пиков asddfgh']
10-01-2023 15:43:45 - user_interface - INFO - edit_menu - Start edit menu
10-01-2023 15:43:49 - user_interface - INFO - edit_menu - Exited the edit menu
10-01-2023 15:44:59 - main - INFO - <module> - Start program
10-01-2023 15:44:59 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 15:45:04 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 15:45:04 - err_check - INFO - find_entry - Search for an entry: 44
10-01-2023 15:45:04 - err_check - WARNING - find_entry - No data found: 44
10-01-2023 15:45:04 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 16:02:56 - main - INFO - <module> - Start program
10-01-2023 16:02:56 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 16:03:05 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 16:03:05 - err_check - INFO - find_entry - Search for an entry: 7
10-01-2023 16:03:05 - err_check - INFO - find_entry - Search result: ['7 Иван Пиков Пиков asddfgh']
10-01-2023 16:03:05 - user_interface - INFO - edit_menu - Start edit menu
10-01-2023 16:05:15 - main - INFO - <module> - Start program
10-01-2023 16:05:15 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 16:05:23 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 16:05:23 - err_check - INFO - find_entry - Search for an entry: 7
10-01-2023 16:05:23 - err_check - INFO - find_entry - Search result: ['7 Иван Пиков Пиков asddfgh']
10-01-2023 16:05:23 - user_interface - INFO - edit_menu - Start edit menu
10-01-2023 16:05:44 - db_work - INFO - edit_entry - Data changes: ('phone', '12345678912')
10-01-2023 16:05:44 - err_check - INFO - find_entry - Search for an entry: 7
10-01-2023 16:05:44 - err_check - INFO - find_entry - Search result: ['7 Иван Пиков Пиков asddfgh']
10-01-2023 16:05:44 - db_work - INFO - edit_entry - Current value: Пиков
10-01-2023 16:05:44 - db_work - INFO - edit_entry - New value: 12345678912
10-01-2023 16:05:44 - db_work - INFO - edit_entry - Data changed
10-01-2023 16:05:44 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 16:05:47 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 16:11:45 - main - INFO - <module> - Start program
10-01-2023 16:11:45 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 16:11:48 - user_interface - INFO - add_menu - Start add menu
10-01-2023 16:12:17 - user_interface - INFO - add_menu - Stop edit menu
10-01-2023 16:12:17 - db_work - INFO - add_entry - Adding a new entry: {'id': '1', 'name': 'Rbhbkk', 'surname': 'Ynik', 'phone': '45678987654', 'description': 'еловек'}
10-01-2023 16:13:20 - main - INFO - <module> - Start program
10-01-2023 16:13:20 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 16:13:47 - main - INFO - <module> - Start program
10-01-2023 16:13:47 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 16:13:51 - user_interface - INFO - add_menu - Start add menu
10-01-2023 16:14:35 - user_interface - INFO - add_menu - Stop edit menu
10-01-2023 16:14:35 - db_work - INFO - add_entry - Adding a new entry: {'id': '1', 'name': 'Нони', 'surname': 'Сок', 'phone': '11111122233', 'description': 'интересный'}
10-01-2023 16:14:35 - db_work - WARNING - add_entry - Data added to the notebook: dict_values([9, 'Нони', 'Сок', '11111122233', 'интересный'])
10-01-2023 16:14:35 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 16:14:38 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 16:16:36 - user_interface - INFO - import_export_menu - Start import/export menu
10-01-2023 16:16:38 - user_interface - INFO - import_export_menu - Start choose a format menu
10-01-2023 16:16:46 - db_export - INFO - save_xml - Export in xml format: new_data.xml
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'1': {'id': '1', 'name': 'Кирилл', 'surname': 'Цинов', 'phone': '12345678', 'description': 'автосервис'}, '2': {'id': '2', 'name': 'Кира', 'surname': 'Цинов', 'phone': '12345678', 'description': 'работа'}, '3': {'id': '3', 'name': 'Роман', 'surname': 'Хорошев', 'phone': '23456789', 'description': 'институт'}, '4': {'id': '4', 'name': 'Василий', 'surname': 'Степанов', 'phone': '12345678', 'description': 'велосипеды'}, '5': {'id': '5', 'name': 'Василий', 'surname': 'Пурков', 'phone': '2345678', 'description': 'лыжи'}, '7': {'id': '7', 'name': 'Иван', 'surname': 'Пиков', 'phone': '12345678912', 'description': 'asddfgh'}, '8': {'id': '8', 'name': 'Иван', 'surname': 'Пиков', 'phone': '12345678901', 'description': 'кровельщик'}, '9': {'id': '9', 'name': 'Нони', 'surname': 'Сок', 'phone': '11111122233', 'description': 'интересный'}}"
10-01-2023 16:16:46 - dicttoxml - INFO - dicttoxml - Inside dicttoxml(): type(obj) is: "dict", obj="{'1': {'id': '1', 'name': 'Кирилл', 'surname': 'Цинов', 'phone': '12345678', 'description': 'автосервис'}, '2': {'id': '2', 'name': 'Кира', 'surname': 'Цинов', 'phone': '12345678', 'description': 'работа'}, '3': {'id': '3', 'name': 'Роман', 'surname': 'Хорошев', 'phone': '23456789', 'description': 'институт'}, '4': {'id': '4', 'name': 'Василий', 'surname': 'Степанов', 'phone': '12345678', 'description': 'велосипеды'}, '5': {'id': '5', 'name': 'Василий', 'surname': 'Пурков', 'phone': '2345678', 'description': 'лыжи'}, '7': {'id': '7', 'name': 'Иван', 'surname': 'Пиков', 'phone': '12345678912', 'description': 'asddfgh'}, '8': {'id': '8', 'name': 'Иван', 'surname': 'Пиков', 'phone': '12345678901', 'description': 'кровельщик'}, '9': {'id': '9', 'name': 'Нони', 'surname': 'Сок', 'phone': '11111122233', 'description': 'интересный'}}"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'1': {'id': '1', 'name': 'Кирилл', 'surname': 'Цинов', 'phone': '12345678', 'description': 'автосервис'}, '2': {'id': '2', 'name': 'Кира', 'surname': 'Цинов', 'phone': '12345678', 'description': 'работа'}, '3': {'id': '3', 'name': 'Роман', 'surname': 'Хорошев', 'phone': '23456789', 'description': 'институт'}, '4': {'id': '4', 'name': 'Василий', 'surname': 'Степанов', 'phone': '12345678', 'description': 'велосипеды'}, '5': {'id': '5', 'name': 'Василий', 'surname': 'Пурков', 'phone': '2345678', 'description': 'лыжи'}, '7': {'id': '7', 'name': 'Иван', 'surname': 'Пиков', 'phone': '12345678912', 'description': 'asddfgh'}, '8': {'id': '8', 'name': 'Иван', 'surname': 'Пиков', 'phone': '12345678901', 'description': 'кровельщик'}, '9': {'id': '9', 'name': 'Нони', 'surname': 'Сок', 'phone': '11111122233', 'description': 'интересный'}}"
10-01-2023 16:16:46 - dicttoxml - INFO - convert - Inside convert(). obj type is: "dict", obj="{'1': {'id': '1', 'name': 'Кирилл', 'surname': 'Цинов', 'phone': '12345678', 'description': 'автосервис'}, '2': {'id': '2', 'name': 'Кира', 'surname': 'Цинов', 'phone': '12345678', 'description': 'работа'}, '3': {'id': '3', 'name': 'Роман', 'surname': 'Хорошев', 'phone': '23456789', 'description': 'институт'}, '4': {'id': '4', 'name': 'Василий', 'surname': 'Степанов', 'phone': '12345678', 'description': 'велосипеды'}, '5': {'id': '5', 'name': 'Василий', 'surname': 'Пурков', 'phone': '2345678', 'description': 'лыжи'}, '7': {'id': '7', 'name': 'Иван', 'surname': 'Пиков', 'phone': '12345678912', 'description': 'asddfgh'}, '8': {'id': '8', 'name': 'Иван', 'surname': 'Пиков', 'phone': '12345678901', 'description': 'кровельщик'}, '9': {'id': '9', 'name': 'Нони', 'surname': 'Сок', 'phone': '11111122233', 'description': 'интересный'}}"
10-01-2023 16:16:46 - dicttoxml - INFO - default_item_func - Inside default_item_func(). parent = "root"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'1': {'id': '1', 'name': 'Кирилл', 'surname': 'Цинов', 'phone': '12345678', 'description': 'автосервис'}, '2': {'id': '2', 'name': 'Кира', 'surname': 'Цинов', 'phone': '12345678', 'description': 'работа'}, '3': {'id': '3', 'name': 'Роман', 'surname': 'Хорошев', 'phone': '23456789', 'description': 'институт'}, '4': {'id': '4', 'name': 'Василий', 'surname': 'Степанов', 'phone': '12345678', 'description': 'велосипеды'}, '5': {'id': '5', 'name': 'Василий', 'surname': 'Пурков', 'phone': '2345678', 'description': 'лыжи'}, '7': {'id': '7', 'name': 'Иван', 'surname': 'Пиков', 'phone': '12345678912', 'description': 'asddfgh'}, '8': {'id': '8', 'name': 'Иван', 'surname': 'Пиков', 'phone': '12345678901', 'description': 'кровельщик'}, '9': {'id': '9', 'name': 'Нони', 'surname': 'Сок', 'phone': '11111122233', 'description': 'интересный'}}"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Inside convert_dict(): obj type is: "dict", obj="{'1': {'id': '1', 'name': 'Кирилл', 'surname': 'Цинов', 'phone': '12345678', 'description': 'автосервис'}, '2': {'id': '2', 'name': 'Кира', 'surname': 'Цинов', 'phone': '12345678', 'description': 'работа'}, '3': {'id': '3', 'name': 'Роман', 'surname': 'Хорошев', 'phone': '23456789', 'description': 'институт'}, '4': {'id': '4', 'name': 'Василий', 'surname': 'Степанов', 'phone': '12345678', 'description': 'велосипеды'}, '5': {'id': '5', 'name': 'Василий', 'surname': 'Пурков', 'phone': '2345678', 'description': 'лыжи'}, '7': {'id': '7', 'name': 'Иван', 'surname': 'Пиков', 'phone': '12345678912', 'description': 'asddfgh'}, '8': {'id': '8', 'name': 'Иван', 'surname': 'Пиков', 'phone': '12345678901', 'description': 'кровельщик'}, '9': {'id': '9', 'name': 'Нони', 'surname': 'Сок', 'phone': '11111122233', 'description': 'интересный'}}"
10-01-2023 16:16:46 - dicttoxml - INFO - default_item_func - Inside default_item_func(). parent = "root"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "1"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '1', 'name': 'Кирилл', 'surname': 'Цинов', 'phone': '12345678', 'description': 'автосервис'}"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="1", val="{'id': '1', 'name': 'Кирилл', 'surname': 'Цинов', 'phone': '12345678', 'description': 'автосервис'}", type(val)="dict"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "1"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "1" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "1" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "1"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "1"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "1"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '1', 'name': 'Кирилл', 'surname': 'Цинов', 'phone': '12345678', 'description': 'автосервис'}"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Inside convert_dict(): obj type is: "dict", obj="{'id': '1', 'name': 'Кирилл', 'surname': 'Цинов', 'phone': '12345678', 'description': 'автосервис'}"
10-01-2023 16:16:46 - dicttoxml - INFO - default_item_func - Inside default_item_func(). parent = "n1"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "1"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="id", val="1", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "1"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="id", val="1", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "1" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "1"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Кирилл"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="name", val="Кирилл", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Кирилл"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="name", val="Кирилл", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Кирилл" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Кирилл"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Цинов"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="surname", val="Цинов", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Цинов"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="surname", val="Цинов", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Цинов" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Цинов"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="phone", val="12345678", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="phone", val="12345678", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "12345678" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "автосервис"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="description", val="автосервис", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "автосервис"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="description", val="автосервис", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "автосервис" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "автосервис"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "2"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '2', 'name': 'Кира', 'surname': 'Цинов', 'phone': '12345678', 'description': 'работа'}"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="2", val="{'id': '2', 'name': 'Кира', 'surname': 'Цинов', 'phone': '12345678', 'description': 'работа'}", type(val)="dict"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "2"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "2" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "2" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "2"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "2"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "2"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '2', 'name': 'Кира', 'surname': 'Цинов', 'phone': '12345678', 'description': 'работа'}"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Inside convert_dict(): obj type is: "dict", obj="{'id': '2', 'name': 'Кира', 'surname': 'Цинов', 'phone': '12345678', 'description': 'работа'}"
10-01-2023 16:16:46 - dicttoxml - INFO - default_item_func - Inside default_item_func(). parent = "n2"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "2"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="id", val="2", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "2"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="id", val="2", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "2" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "2"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Кира"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="name", val="Кира", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Кира"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="name", val="Кира", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Кира" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Кира"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Цинов"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="surname", val="Цинов", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Цинов"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="surname", val="Цинов", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Цинов" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Цинов"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="phone", val="12345678", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="phone", val="12345678", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "12345678" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "работа"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="description", val="работа", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "работа"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="description", val="работа", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "работа" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "работа"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "3"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '3', 'name': 'Роман', 'surname': 'Хорошев', 'phone': '23456789', 'description': 'институт'}"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="3", val="{'id': '3', 'name': 'Роман', 'surname': 'Хорошев', 'phone': '23456789', 'description': 'институт'}", type(val)="dict"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "3"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "3" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "3" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "3"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "3"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "3"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '3', 'name': 'Роман', 'surname': 'Хорошев', 'phone': '23456789', 'description': 'институт'}"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Inside convert_dict(): obj type is: "dict", obj="{'id': '3', 'name': 'Роман', 'surname': 'Хорошев', 'phone': '23456789', 'description': 'институт'}"
10-01-2023 16:16:46 - dicttoxml - INFO - default_item_func - Inside default_item_func(). parent = "n3"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "3"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="id", val="3", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "3"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="id", val="3", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "3" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "3"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Роман"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="name", val="Роман", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Роман"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="name", val="Роман", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Роман" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Роман"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Хорошев"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="surname", val="Хорошев", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Хорошев"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="surname", val="Хорошев", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Хорошев" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Хорошев"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "23456789"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="phone", val="23456789", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "23456789"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="phone", val="23456789", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "23456789" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "23456789"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "институт"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="description", val="институт", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "институт"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="description", val="институт", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "институт" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "институт"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "4"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '4', 'name': 'Василий', 'surname': 'Степанов', 'phone': '12345678', 'description': 'велосипеды'}"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="4", val="{'id': '4', 'name': 'Василий', 'surname': 'Степанов', 'phone': '12345678', 'description': 'велосипеды'}", type(val)="dict"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "4"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "4" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "4" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "4"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "4"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "4"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '4', 'name': 'Василий', 'surname': 'Степанов', 'phone': '12345678', 'description': 'велосипеды'}"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Inside convert_dict(): obj type is: "dict", obj="{'id': '4', 'name': 'Василий', 'surname': 'Степанов', 'phone': '12345678', 'description': 'велосипеды'}"
10-01-2023 16:16:46 - dicttoxml - INFO - default_item_func - Inside default_item_func(). parent = "n4"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "4"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="id", val="4", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "4"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="id", val="4", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "4" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "4"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Василий"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="name", val="Василий", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Василий"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="name", val="Василий", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Василий" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Василий"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Степанов"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="surname", val="Степанов", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Степанов"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="surname", val="Степанов", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Степанов" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Степанов"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="phone", val="12345678", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="phone", val="12345678", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "12345678" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "велосипеды"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="description", val="велосипеды", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "велосипеды"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="description", val="велосипеды", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "велосипеды" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "велосипеды"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "5"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '5', 'name': 'Василий', 'surname': 'Пурков', 'phone': '2345678', 'description': 'лыжи'}"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="5", val="{'id': '5', 'name': 'Василий', 'surname': 'Пурков', 'phone': '2345678', 'description': 'лыжи'}", type(val)="dict"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "5"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "5" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "5" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "5"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "5"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "5"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '5', 'name': 'Василий', 'surname': 'Пурков', 'phone': '2345678', 'description': 'лыжи'}"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Inside convert_dict(): obj type is: "dict", obj="{'id': '5', 'name': 'Василий', 'surname': 'Пурков', 'phone': '2345678', 'description': 'лыжи'}"
10-01-2023 16:16:46 - dicttoxml - INFO - default_item_func - Inside default_item_func(). parent = "n5"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "5"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="id", val="5", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "5"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="id", val="5", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "5" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "5"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Василий"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="name", val="Василий", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Василий"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="name", val="Василий", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Василий" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Василий"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Пурков"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="surname", val="Пурков", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Пурков"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="surname", val="Пурков", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Пурков" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Пурков"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "2345678"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="phone", val="2345678", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "2345678"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="phone", val="2345678", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "2345678" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "2345678"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "лыжи"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="description", val="лыжи", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "лыжи"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="description", val="лыжи", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "лыжи" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "лыжи"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "7"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '7', 'name': 'Иван', 'surname': 'Пиков', 'phone': '12345678912', 'description': 'asddfgh'}"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="7", val="{'id': '7', 'name': 'Иван', 'surname': 'Пиков', 'phone': '12345678912', 'description': 'asddfgh'}", type(val)="dict"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "7"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "7" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "7" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "7"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "7"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "7"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '7', 'name': 'Иван', 'surname': 'Пиков', 'phone': '12345678912', 'description': 'asddfgh'}"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Inside convert_dict(): obj type is: "dict", obj="{'id': '7', 'name': 'Иван', 'surname': 'Пиков', 'phone': '12345678912', 'description': 'asddfgh'}"
10-01-2023 16:16:46 - dicttoxml - INFO - default_item_func - Inside default_item_func(). parent = "n7"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "7"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="id", val="7", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "7"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="id", val="7", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "7" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "7"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Иван"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="name", val="Иван", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Иван"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="name", val="Иван", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Иван" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Иван"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Пиков"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="surname", val="Пиков", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Пиков"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="surname", val="Пиков", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Пиков" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Пиков"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678912"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="phone", val="12345678912", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678912"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="phone", val="12345678912", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "12345678912" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678912"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "asddfgh"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="description", val="asddfgh", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "asddfgh"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="description", val="asddfgh", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "asddfgh" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "asddfgh"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "8"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '8', 'name': 'Иван', 'surname': 'Пиков', 'phone': '12345678901', 'description': 'кровельщик'}"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="8", val="{'id': '8', 'name': 'Иван', 'surname': 'Пиков', 'phone': '12345678901', 'description': 'кровельщик'}", type(val)="dict"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "8"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "8" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "8" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "8"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "8"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "8"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '8', 'name': 'Иван', 'surname': 'Пиков', 'phone': '12345678901', 'description': 'кровельщик'}"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Inside convert_dict(): obj type is: "dict", obj="{'id': '8', 'name': 'Иван', 'surname': 'Пиков', 'phone': '12345678901', 'description': 'кровельщик'}"
10-01-2023 16:16:46 - dicttoxml - INFO - default_item_func - Inside default_item_func(). parent = "n8"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "8"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="id", val="8", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "8"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="id", val="8", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "8" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "8"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Иван"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="name", val="Иван", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Иван"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="name", val="Иван", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Иван" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Иван"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Пиков"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="surname", val="Пиков", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Пиков"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="surname", val="Пиков", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Пиков" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Пиков"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678901"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="phone", val="12345678901", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678901"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="phone", val="12345678901", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "12345678901" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "12345678901"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "кровельщик"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="description", val="кровельщик", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "кровельщик"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="description", val="кровельщик", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "кровельщик" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "кровельщик"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "9"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '9', 'name': 'Нони', 'surname': 'Сок', 'phone': '11111122233', 'description': 'интересный'}"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="9", val="{'id': '9', 'name': 'Нони', 'surname': 'Сок', 'phone': '11111122233', 'description': 'интересный'}", type(val)="dict"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "9"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "9" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "9" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "9"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "9"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "9"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{'id': '9', 'name': 'Нони', 'surname': 'Сок', 'phone': '11111122233', 'description': 'интересный'}"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Inside convert_dict(): obj type is: "dict", obj="{'id': '9', 'name': 'Нони', 'surname': 'Сок', 'phone': '11111122233', 'description': 'интересный'}"
10-01-2023 16:16:46 - dicttoxml - INFO - default_item_func - Inside default_item_func(). parent = "n9"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "9"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="id", val="9", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "9"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="id", val="9", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "id" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "id" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "id"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "id"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "9" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "9"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Нони"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="name", val="Нони", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Нони"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="name", val="Нони", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "name" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "name" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "name"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "name"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Нони" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Нони"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Сок"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="surname", val="Сок", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Сок"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="surname", val="Сок", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "surname" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "surname" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "surname"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "Сок" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "Сок"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "11111122233"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="phone", val="11111122233", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "11111122233"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="phone", val="11111122233", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "phone" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "phone" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "phone"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "11111122233" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "11111122233"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "интересный"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_dict - Looping inside convert_dict(): key="description", val="интересный", type(val)="str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "интересный"
10-01-2023 16:16:46 - dicttoxml - INFO - convert_kv - Inside convert_kv(): key="description", val="интересный", type(val) is: "str"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - make_valid_xml_name - Inside make_valid_xml_name(). Testing key "description" with attr "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "description" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "{}" and type(s) = "<class 'dict'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "description"
10-01-2023 16:16:46 - dicttoxml - INFO - key_is_valid_xml - Inside key_is_valid_xml(). Testing "description"
10-01-2023 16:16:46 - dicttoxml - INFO - make_attrstring - Inside make_attstring(). attr = "{}"
10-01-2023 16:16:46 - dicttoxml - INFO - escape_xml - Inside escape_xml(). s = "интересный" and type(s) = "<class 'str'>"
10-01-2023 16:16:46 - dicttoxml - INFO - unicode_me - Inside unicode_me(). val = "интересный"
10-01-2023 16:16:46 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
10-01-2023 16:16:48 - user_interface - INFO - menu - Stop program.

10-01-2023 17:45:23 - main - INFO - <module> - Start program
10-01-2023 17:45:23 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
27-01-2023 09:50:03 - main - INFO - <module> - Start program
27-01-2023 09:50:03 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
27-01-2023 09:50:07 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
27-01-2023 09:50:19 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
27-01-2023 09:50:19 - err_check - INFO - find_entry - Search for an entry: 5
27-01-2023 09:50:19 - err_check - INFO - find_entry - Search result: ['5 Василий Пурков 2345678 лыжи']
27-01-2023 09:50:19 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
27-01-2023 09:50:48 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
27-01-2023 09:50:48 - err_check - INFO - find_entry - Search for an entry: 
27-01-2023 09:50:48 - err_check - WARNING - find_entry - No data found: 
27-01-2023 09:50:48 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
27-01-2023 09:51:32 - main - INFO - <module> - Start program
27-01-2023 09:51:32 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
27-01-2023 09:51:35 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
27-01-2023 09:51:37 - user_interface - INFO - menu - Stop program.

27-01-2023 10:09:17 - main - INFO - <module> - Start program
27-01-2023 10:09:17 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
27-01-2023 10:10:07 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
27-01-2023 10:10:29 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
27-01-2023 10:10:29 - err_check - INFO - find_entry - Search for an entry: Василий
27-01-2023 10:10:29 - err_check - INFO - find_entry - Search result: ['4 Василий Степанов 12345678 велосипеды', '5 Василий Пурков 2345678 лыжи']
27-01-2023 10:10:29 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
27-01-2023 10:10:41 - user_interface - INFO - import_export_menu - Start import/export menu
27-01-2023 10:10:46 - user_interface - INFO - import_export_menu - Start choose a format menu
27-01-2023 10:10:50 - user_interface - INFO - import_export_menu - Exited the choose a format menu
27-01-2023 10:10:50 - db_work - INFO - read_all - Show all Show all entries. Database File - telephone_book.csv
27-01-2023 10:10:52 - user_interface - INFO - menu - Stop program.

